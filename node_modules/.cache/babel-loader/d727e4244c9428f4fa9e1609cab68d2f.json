{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sehrish.ahmed\\\\Desktop\\\\redux\\\\redux-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\nconst redux = require('redux');\n\nconst createStore = redux.createStore;\nconst BUY_CAKE = 'BUY_CAKE';\nconst BUY_ICECREAM = 'BUY_ICECREAM';\n\nfunction buyCake() {\n  return {\n    type: BUY_CAKE,\n    info: 'First redux action'\n  };\n}\n\nfunction buyIceCream() {\n  return {\n    type: BUY_ICECREAM\n  };\n} // const initialState = {\n//     noOfCakes: 10,\n//     noOfIceCream: 20\n// }\n\n\nconst cakeInitialSate = {\n  noOfCakes: 10\n};\nconst iceCreamInitialState = {\n  noOfIceCream: 20\n}; // const reducer = (state = initialState, action) => {\n//     switch(action.type) {\n//         case BUY_CAKE: return {\n//             ...state,\n//             noOfCakes: state.noOfCakes - 1\n//         }\n//         case BUY_ICECREAM: return {\n//             ...state,\n//             noOfIceCream: state.noOfIceCream - 1\n//         }\n//          default: return state;\n//     }\n// }\n\nconst store = createStore(reducer);\nconsole.log('initial state', store.getState());\nconst unsubscribe = store.subscribe(() => console.log('updated state', store.getState()));\nstore.dispatch(buyCake());\nstore.dispatch(buyCake());\nstore.dispatch(buyCake());\nstore.dispatch(buyIceCream());\nstore.dispatch(buyIceCream());\nunsubscribe();","map":{"version":3,"sources":["C:/Users/sehrish.ahmed/Desktop/redux/redux-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","unregister","redux","require","createStore","BUY_CAKE","BUY_ICECREAM","buyCake","type","info","buyIceCream","cakeInitialSate","noOfCakes","iceCreamInitialState","noOfIceCream","store","reducer","console","log","getState","unsubscribe","subscribe","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAF,QAAQ,CAACG,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAH,aAAa,CAACI,UAAd;;AAGA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,WAAW,GAAGF,KAAK,CAACE,WAA1B;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,YAAY,GAAG,cAArB;;AAEA,SAASC,OAAT,GAAoB;AAChB,SAAO;AACHC,IAAAA,IAAI,EAAEH,QADH;AAEHI,IAAAA,IAAI,EAAE;AAFH,GAAP;AAIH;;AAED,SAASC,WAAT,GAAwB;AACpB,SAAO;AACHF,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH,C,CAED;AACA;AACA;AACA;;;AAEA,MAAMK,eAAe,GAAG;AACpBC,EAAAA,SAAS,EAAE;AADS,CAAxB;AAKA,MAAMC,oBAAoB,GAAG;AACzBC,EAAAA,YAAY,EAAE;AADW,CAA7B,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGX,WAAW,CAACY,OAAD,CAAzB;AACAC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,KAAK,CAACI,QAAN,EAA7B;AACA,MAAMC,WAAW,GAAGL,KAAK,CAACM,SAAN,CAAgB,MAAMJ,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,KAAK,CAACI,QAAN,EAA7B,CAAtB,CAApB;AACAJ,KAAK,CAACO,QAAN,CAAef,OAAO,EAAtB;AACAQ,KAAK,CAACO,QAAN,CAAef,OAAO,EAAtB;AACAQ,KAAK,CAACO,QAAN,CAAef,OAAO,EAAtB;AACAQ,KAAK,CAACO,QAAN,CAAeZ,WAAW,EAA1B;AACAK,KAAK,CAACO,QAAN,CAAeZ,WAAW,EAA1B;AACAU,WAAW","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nconst redux = require('redux')\nconst createStore = redux.createStore\n\nconst BUY_CAKE = 'BUY_CAKE';\nconst BUY_ICECREAM = 'BUY_ICECREAM';\n\nfunction buyCake () {\n    return {\n        type: BUY_CAKE,\n        info: 'First redux action'\n    }\n}\n\nfunction buyIceCream () {\n    return {\n        type: BUY_ICECREAM  \n    }\n}\n\n// const initialState = {\n//     noOfCakes: 10,\n//     noOfIceCream: 20\n// }\n\nconst cakeInitialSate = {\n    noOfCakes: 10,\n}\n\n\nconst iceCreamInitialState = {\n    noOfIceCream: 20\n}\n\n// const reducer = (state = initialState, action) => {\n//     switch(action.type) {\n//         case BUY_CAKE: return {\n//             ...state,\n//             noOfCakes: state.noOfCakes - 1\n//         }\n//         case BUY_ICECREAM: return {\n//             ...state,\n//             noOfIceCream: state.noOfIceCream - 1\n//         }\n//          default: return state;\n//     }\n// }\n\nconst store = createStore(reducer)\nconsole.log('initial state', store.getState())\nconst unsubscribe = store.subscribe(() => console.log('updated state', store.getState()))\nstore.dispatch(buyCake())\nstore.dispatch(buyCake())\nstore.dispatch(buyCake())\nstore.dispatch(buyIceCream())\nstore.dispatch(buyIceCream())\nunsubscribe()"]},"metadata":{},"sourceType":"module"}