{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\sehrish.ahmed\\\\Desktop\\\\redux\\\\redux-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\sehrish.ahmed\\\\Desktop\\\\redux\\\\redux-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\nconst redux = require('redux');\n\nconst createStore = redux.createStore;\nconst BUY_CAKE = 'BUY_CAKE';\n\nfunction buyCake() {\n  return {\n    type: BUY_CAKE,\n    info: 'First redux action'\n  };\n}\n\nconst initialState = _objectSpread({}, state, {\n  noOfCakes: 10\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case BUY_CAKE:\n      return {\n        noOfCakes: state.noOfCakes - 1\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer);\nconsole.log('initial state', sore.getState());\nconst subscribe = store.subscribe(() => console.log('updated state', store.getState()));\nstore.didpatch();","map":{"version":3,"sources":["C:/Users/sehrish.ahmed/Desktop/redux/redux-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","unregister","redux","require","createStore","BUY_CAKE","buyCake","type","info","initialState","state","noOfCakes","reducer","action","store","console","log","sore","getState","subscribe","didpatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAF,QAAQ,CAACG,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAH,aAAa,CAACI,UAAd;;AAGA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,WAAW,GAAGF,KAAK,CAACE,WAA1B;AAEA,MAAMC,QAAQ,GAAG,UAAjB;;AAEA,SAASC,OAAT,GAAoB;AAChB,SAAO;AACHC,IAAAA,IAAI,EAAEF,QADH;AAEHG,IAAAA,IAAI,EAAE;AAFH,GAAP;AAIH;;AAED,MAAMC,YAAY,qBACXC,KADW;AAEdC,EAAAA,SAAS,EAAE;AAFG,EAAlB;;AAKA,MAAMC,OAAO,GAAG,CAACF,KAAK,GAAGD,YAAT,EAAuBI,MAAvB,KAAkC;AAC9C,UAAOA,MAAM,CAACN,IAAd;AACI,SAAKF,QAAL;AAAe,aAAO;AAClBM,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,GAAkB;AADX,OAAP;;AAIf;AAAS,aAAOD,KAAP;AALb;AAOH,CARD;;AAUA,MAAMI,KAAK,GAAGV,WAAW,CAACQ,OAAD,CAAzB;AACAG,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,IAAI,CAACC,QAAL,EAA7B;AACA,MAAMC,SAAS,GAAGL,KAAK,CAACK,SAAN,CAAgB,MAAMJ,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAAK,CAACI,QAAN,EAA7B,CAAtB,CAAlB;AACAJ,KAAK,CAACM,QAAN","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nconst redux = require('redux')\nconst createStore = redux.createStore\n\nconst BUY_CAKE = 'BUY_CAKE';\n\nfunction buyCake () {\n    return {\n        type: BUY_CAKE,\n        info: 'First redux action'\n    }\n}\n\nconst initialState = {\n    ...state,\n    noOfCakes: 10\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case BUY_CAKE: return {\n            noOfCakes: state.noOfCakes - 1\n        }\n\n        default: return state;\n    }\n}\n\nconst store = createStore(reducer)\nconsole.log('initial state', sore.getState())\nconst subscribe = store.subscribe(() => console.log('updated state', store.getState()))\nstore.didpatch()"]},"metadata":{},"sourceType":"module"}