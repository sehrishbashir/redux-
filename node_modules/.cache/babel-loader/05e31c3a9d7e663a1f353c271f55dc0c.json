{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\sehrish.ahmed\\\\Desktop\\\\redux\\\\redux-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\sehrish.ahmed\\\\Desktop\\\\redux\\\\redux-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n\nconst redux = require('redux');\n\nconst reduxLogger = require('redux-logger');\n\nconst createStore = redux.createStore;\nconst combineReducers = redux.combineReducers;\nconst applyMiddleware = redux.applyMiddleware;\nconst logger = reduxLogger.createLogger();\nconst BUY_CAKE = 'BUY_CAKE';\nconst BUY_ICECREAM = 'BUY_ICECREAM'; //////////   action   /////////////\n\nfunction buyCake() {\n  return {\n    type: BUY_CAKE,\n    info: 'First redux action'\n  };\n}\n\nfunction buyIceCream() {\n  return {\n    type: BUY_ICECREAM\n  };\n} // const initialState = {\n//     noOfCakes: 10,\n//     noOfIceCream: 20\n// }\n/////////       pev state     /////////////\n\n\nconst initialCakeState = {\n  noOfCakes: 10\n};\nconst initialIceCreamState = {\n  noOfIceCream: 20\n}; // const reducer = (state = initialState, action) => {\n//     switch(action.type) {\n//         case BUY_CAKE: return {\n//             ...state,\n//             noOfCakes: state.noOfCakes - 1\n//         }\n//         case BUY_ICECREAM: return {\n//             ...state,\n//             noOfIceCream: state.noOfIceCream - 1\n//         }\n//          default: return state;\n//     }\n// }\n////////////      next state       //////////////\n\nconst cakeReducer = (state = initialCakeState, action) => {\n  switch (action.type) {\n    case BUY_CAKE:\n      return _objectSpread({}, state, {\n        noOfCakes: state.noOfCakes - 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst iceCreamReducer = (state = initialIceCreamState, action) => {\n  switch (action.type) {\n    case BUY_ICECREAM:\n      return _objectSpread({}, state, {\n        noOfIceCream: state.noOfIceCream - 1\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducers = combineReducers({\n  cake: cakeReducer,\n  iceCream: iceCreamReducer\n});\nconst store = createStore(rootReducers, applyMiddleware(logger));\nconsole.log('initial state', store.getState());\nconst unsubscribe = store.subscribe(() => console.log('updated state', store.getState()));\nstore.dispatch(buyCake());\nstore.dispatch(buyCake());\nstore.dispatch(buyCake());\nstore.dispatch(buyIceCream());\nstore.dispatch(buyIceCream());\nunsubscribe();\nconst initialState = {\n  loading: false,\n  users: [],\n  error: ''\n};\nconst FATCH_USERS_REQUEST = 'FATCH_USERS_REQUEST';\nconst FATCH_USERS_SUCCESS = 'FATCH_USERS_SUCCESS';\nconst FATCH_USERS_FAILURE = 'FATCH_USERS_FAILURE';\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FATCH_USERS_REQUEST:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case FATCH_USERS_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload,\n        error: ''\n      };\n\n    case FATCH_USERS_FAILURE:\n      return {\n        loading: false,\n        users: [],\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst fetchUsersRequest = () => {\n  console.log('sucess');\n  return {\n    type: FATCH_USERS_REQUEST\n  };\n};\n\nconst fetchUsersSuccess = users => {\n  console.log('hi');\n  return {\n    type: FATCH_USERS_SUCCESS,\n    payload: users\n  };\n};\n\nconst fetchUsersFailure = error => {\n  console.log('bye');\n  return {\n    type: FATCH_USERS_FAILURE,\n    payload: error\n  };\n};\n\nconst fetchUsers = () => {\n  return function (dispatch) {\n    console.log('data');\n    dispatch(fetchUsersRequest());\n    axios.get('https://jsonplaceholder.typicode.com/users').then(response => {\n      console.log(response);\n      const users = response.data.map(user => user.id);\n      console.log(users);\n      dispatch(fetchUsersSuccess(users));\n    }).catch(error => {\n      console.log(error);\n      dispatch(fetchUsersFailure(error.message));\n    });\n  };\n};\n\nconst vstore = createStore(reducer, applyMiddleware(thunkMiddleware));\nstore.subscribe(() => {\n  console.log(store.getState());\n});\nstore.dispatch(fetchUsers()); // console.log(fetchUsers)\n// console.log(store)\n// console.log(reducer);\n// console.log(fetchUsers)\n// store.dispatch(fetchUsersRequest)\n// store.dispatch(fetchUsersSuccess)\n// store.dispatch(fetchUsersFailure)","map":{"version":3,"sources":["C:/Users/sehrish.ahmed/Desktop/redux/redux-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","unregister","redux","require","reduxLogger","createStore","combineReducers","applyMiddleware","logger","createLogger","BUY_CAKE","BUY_ICECREAM","buyCake","type","info","buyIceCream","initialCakeState","noOfCakes","initialIceCreamState","noOfIceCream","cakeReducer","state","action","iceCreamReducer","rootReducers","cake","iceCream","store","console","log","getState","unsubscribe","subscribe","dispatch","initialState","loading","users","error","FATCH_USERS_REQUEST","FATCH_USERS_SUCCESS","FATCH_USERS_FAILURE","reducer","payload","fetchUsersRequest","fetchUsersSuccess","fetchUsersFailure","fetchUsers","axios","get","then","response","data","map","user","id","catch","message","vstore","thunkMiddleware"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEAF,QAAQ,CAACG,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAH,aAAa,CAACI,UAAd;;AAGA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,cAAD,CAA3B;;AAEA,MAAME,WAAW,GAAGH,KAAK,CAACG,WAA1B;AACA,MAAMC,eAAe,GAAGJ,KAAK,CAACI,eAA9B;AACA,MAAMC,eAAe,GAAGL,KAAK,CAACK,eAA9B;AACA,MAAMC,MAAM,GAAGJ,WAAW,CAACK,YAAZ,EAAf;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,YAAY,GAAG,cAArB,C,CAIA;;AACA,SAASC,OAAT,GAAoB;AAChB,SAAO;AACHC,IAAAA,IAAI,EAAEH,QADH;AAEHI,IAAAA,IAAI,EAAE;AAFH,GAAP;AAIH;;AAED,SAASC,WAAT,GAAwB;AACpB,SAAO;AACHF,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH,C,CAED;AACA;AACA;AACA;AAGA;;;AAEA,MAAMK,gBAAgB,GAAG;AACrBC,EAAAA,SAAS,EAAE;AADU,CAAzB;AAKA,MAAMC,oBAAoB,GAAG;AACzBC,EAAAA,YAAY,EAAE;AADW,CAA7B,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,gBAAT,EAA2BM,MAA3B,KAAsC;AACtD,UAAOA,MAAM,CAACT,IAAd;AACI,SAAKH,QAAL;AAAe,+BACRW,KADQ;AAEXJ,QAAAA,SAAS,EAAEI,KAAK,CAACJ,SAAN,GAAkB;AAFlB;;AAIf;AAAS,aAAOI,KAAP;AALb;AAOH,CARD;;AAUA,MAAME,eAAe,GAAG,CAACF,KAAK,GAAGH,oBAAT,EAA+BI,MAA/B,KAA0C;AAC9D,UAAOA,MAAM,CAACT,IAAd;AACI,SAAKF,YAAL;AAAmB,+BACZU,KADY;AAEfF,QAAAA,YAAY,EAAEE,KAAK,CAACF,YAAN,GAAqB;AAFpB;;AAIlB;AAAS,aAAOE,KAAP;AALd;AAOH,CARD;;AAcA,MAAMG,YAAY,GAAGlB,eAAe,CAAC;AACjCmB,EAAAA,IAAI,EAAEL,WAD2B;AAEjCM,EAAAA,QAAQ,EAAEH;AAFuB,CAAD,CAApC;AAIA,MAAMI,KAAK,GAAGtB,WAAW,CAACmB,YAAD,EAAejB,eAAe,CAACC,MAAD,CAA9B,CAAzB;AACAoB,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAAK,CAACG,QAAN,EAA7B;AACA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,SAAN,CAAgB,MAAMJ,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAAK,CAACG,QAAN,EAA7B,CAAtB,CAApB;AACAH,KAAK,CAACM,QAAN,CAAerB,OAAO,EAAtB;AACAe,KAAK,CAACM,QAAN,CAAerB,OAAO,EAAtB;AACAe,KAAK,CAACM,QAAN,CAAerB,OAAO,EAAtB;AACAe,KAAK,CAACM,QAAN,CAAelB,WAAW,EAA1B;AACAY,KAAK,CAACM,QAAN,CAAelB,WAAW,EAA1B;AACAgB,WAAW;AASX,MAAMG,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;;AAEA,MAAMC,OAAO,GAAG,CAACpB,KAAK,GAAGa,YAAT,EAAuBZ,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACT,IAAf;AACI,SAAKyB,mBAAL;AACI,+BACOjB,KADP;AAEIc,QAAAA,OAAO,EAAE;AAFb;;AAKJ,SAAKI,mBAAL;AACI,aAAO;AACHJ,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,KAAK,EAAEd,MAAM,CAACoB,OAFX;AAGHL,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAMJ,SAAKG,mBAAL;AACI,aAAO;AACHL,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,KAAK,EAAEf,MAAM,CAACoB;AAHX,OAAP;;AAKJ;AAAS,aAAOrB,KAAP;AApBb;AAsBH,CAvBD;;AAyBA,MAAMsB,iBAAiB,GAAG,MAAM;AAC5Bf,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,SAAO;AACHhB,IAAAA,IAAI,EAAEyB;AADH,GAAP;AAGH,CALD;;AAOA,MAAMM,iBAAiB,GAAGR,KAAK,IAAI;AAC/BR,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAO;AACHhB,IAAAA,IAAI,EAAE0B,mBADH;AAEHG,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH,CAND;;AAQA,MAAMS,iBAAiB,GAAGR,KAAK,IAAI;AAC/BT,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACA,SAAO;AACHhB,IAAAA,IAAI,EAAE2B,mBADH;AAEHE,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH,CAND;;AASA,MAAMS,UAAU,GAAG,MAAM;AACrB,SAAO,UAAUb,QAAV,EAAoB;AACvBL,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAI,IAAAA,QAAQ,CAACU,iBAAiB,EAAlB,CAAR;AACAI,IAAAA,KAAK,CAACC,GAAN,CAAU,4CAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACdtB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,QAAZ;AACA,YAAMd,KAAK,GAAGc,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,IAAI,IAAIA,IAAI,CAACC,EAA/B,CAAd;AACA1B,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACAH,MAAAA,QAAQ,CAACW,iBAAiB,CAACR,KAAD,CAAlB,CAAR;AACH,KANL,EAOKmB,KAPL,CAOWlB,KAAK,IAAI;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACAJ,MAAAA,QAAQ,CAACY,iBAAiB,CAACR,KAAK,CAACmB,OAAP,CAAlB,CAAR;AACH,KAVL;AAWH,GAdD;AAeH,CAhBD;;AAmBA,MAAMC,MAAM,GAAGpD,WAAW,CAACoC,OAAD,EAAUlC,eAAe,CAACmD,eAAD,CAAzB,CAA1B;AACA/B,KAAK,CAACK,SAAN,CAAgB,MAAM;AAAEJ,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ;AAA+B,CAAvD;AACAH,KAAK,CAACM,QAAN,CAAea,UAAU,EAAzB,E,CACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nconst redux = require('redux')\nconst reduxLogger = require('redux-logger')\n\nconst createStore = redux.createStore\nconst combineReducers = redux.combineReducers\nconst applyMiddleware = redux.applyMiddleware\nconst logger = reduxLogger.createLogger()\n\nconst BUY_CAKE = 'BUY_CAKE';\nconst BUY_ICECREAM = 'BUY_ICECREAM';\n\n\n\n//////////   action   /////////////\nfunction buyCake () {\n    return {\n        type: BUY_CAKE,\n        info: 'First redux action'\n    }\n}\n\nfunction buyIceCream () {\n    return {\n        type: BUY_ICECREAM  \n    }\n}\n\n// const initialState = {\n//     noOfCakes: 10,\n//     noOfIceCream: 20\n// }\n\n\n/////////       pev state     /////////////\n\nconst initialCakeState = {\n    noOfCakes: 10,\n}\n\n\nconst initialIceCreamState = {\n    noOfIceCream: 20\n}\n\n// const reducer = (state = initialState, action) => {\n//     switch(action.type) {\n//         case BUY_CAKE: return {\n//             ...state,\n//             noOfCakes: state.noOfCakes - 1\n//         }\n//         case BUY_ICECREAM: return {\n//             ...state,\n//             noOfIceCream: state.noOfIceCream - 1\n//         }\n//          default: return state;\n//     }\n// }\n\n\n\n////////////      next state       //////////////\n\nconst cakeReducer = (state = initialCakeState, action) => {\n    switch(action.type) {\n        case BUY_CAKE: return {\n            ...state,\n            noOfCakes: state.noOfCakes - 1\n        }\n        default: return state;\n    }\n}\n\nconst iceCreamReducer = (state = initialIceCreamState, action) => {\n    switch(action.type) {\n        case BUY_ICECREAM: return {\n            ...state,\n            noOfIceCream: state.noOfIceCream - 1\n        }\n         default: return state;\n    }\n}\n\n\n\n\n\nconst rootReducers = combineReducers({\n    cake: cakeReducer,\n    iceCream: iceCreamReducer\n})\nconst store = createStore(rootReducers, applyMiddleware(logger))\nconsole.log('initial state', store.getState())\nconst unsubscribe = store.subscribe(() => console.log('updated state', store.getState()))\nstore.dispatch(buyCake())\nstore.dispatch(buyCake())\nstore.dispatch(buyCake())\nstore.dispatch(buyIceCream())\nstore.dispatch(buyIceCream())\nunsubscribe()\n\n\n\n\n\n\n\n\nconst initialState = {\n    loading: false,\n    users: [],\n    error: ''\n}\n\nconst FATCH_USERS_REQUEST = 'FATCH_USERS_REQUEST'\nconst FATCH_USERS_SUCCESS = 'FATCH_USERS_SUCCESS'\nconst FATCH_USERS_FAILURE = 'FATCH_USERS_FAILURE'\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FATCH_USERS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case FATCH_USERS_SUCCESS:\n            return {\n                loading: false,\n                users: action.payload,\n                error: '',\n            }\n\n        case FATCH_USERS_FAILURE:\n            return {\n                loading: false,\n                users: [],\n                error: action.payload\n            }\n        default: return state;\n    }\n}\n\nconst fetchUsersRequest = () => {\n    console.log('sucess')\n    return {\n        type: FATCH_USERS_REQUEST\n    }\n}\n\nconst fetchUsersSuccess = users => {\n    console.log('hi')\n    return {\n        type: FATCH_USERS_SUCCESS,\n        payload: users\n    }\n}\n\nconst fetchUsersFailure = error => {\n    console.log('bye')\n    return {\n        type: FATCH_USERS_FAILURE,\n        payload: error\n    }\n}\n\n\nconst fetchUsers = () => {\n    return function (dispatch) {\n        console.log('data')\n        dispatch(fetchUsersRequest())\n        axios.get('https://jsonplaceholder.typicode.com/users')\n            .then(response => {\n                console.log(response)\n                const users = response.data.map(user => user.id)\n                console.log(users)\n                dispatch(fetchUsersSuccess(users))\n            })\n            .catch(error => {\n                console.log(error)\n                dispatch(fetchUsersFailure(error.message))\n            })\n    }\n}\n\n\nconst vstore = createStore(reducer, applyMiddleware(thunkMiddleware))\nstore.subscribe(() => { console.log(store.getState()) })\nstore.dispatch(fetchUsers())\n// console.log(fetchUsers)\n// console.log(store)\n// console.log(reducer);\n// console.log(fetchUsers)\n// store.dispatch(fetchUsersRequest)\n// store.dispatch(fetchUsersSuccess)\n// store.dispatch(fetchUsersFailure)\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}